/* -------------------------------------------------------------------------- */
/*                                 CSS Reset                                  */
/* -------------------------------------------------------------------------- */

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1, h2, h3, h4, h5, h6,
p,
figure,
blockquote,
dl,
dd,
ul,
ol {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests they'll be styled individually */
ul[role='list'],
ol[role='list'] {
  list-style: none;
  padding: 0;
}

/* Set core root defaults */
html {
  scroll-behavior: smooth;
  height: 100%; /* Ensure html takes full height */
}

/* Set core body defaults */
body {
  min-height: 100%; /* Ensure body takes full height */
  text-rendering: optimizeSpeed;
  line-height: 1.5;
  font-family: var(--font-sans); /* Moved from later declaration */
  background-color: var(--color-bg); /* Moved from later declaration */
  color: var(--color-text-base); /* Moved from later declaration */
  -webkit-font-smoothing: antialiased; /* Moved from later declaration */
  -moz-osx-font-smoothing: grayscale; /* Moved from later declaration */
  margin: 0; /* Explicitly ensure no body margin from user agent */
  display: flex; /* Prepare for app wrapper to be a flex child */
  flex-direction: column; /* Prepare for app wrapper to be a flex child */
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations and transitions for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
   scroll-behavior: auto;
  }
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* -------------------------------------------------------------------------- */
/*                               Theme Variables                              */
/* -------------------------------------------------------------------------- */

:root {
  /* Fonts (ensure these are loaded via @font-face or a font provider like Next/Font) */
  --font-sans: "Geist Variable", system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  --font-mono: "Geist Mono Variable", ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;

  /* Light Mode Colors */
  --color-bg: #ffffff;
  --color-text-base: #111827;  /* gray-900 */
  --color-text-muted: #374151; /* gray-700 */
  --color-text-subtle: #6b7280;/* gray-500 */

  --color-border: #e5e7eb;     /* gray-200 */
  --color-border-hover: #d1d5db;/* gray-300 */

  --color-link: #2563eb;       /* blue-600 */
  --color-link-hover: #1d4ed8; /* blue-700 */

  --color-button-bg: #3b82f6;    /* blue-500 */
  --color-button-text: #ffffff;
  --color-button-hover-bg: #2563eb;/* blue-600 */

  --color-input-bg: #ffffff;
  --color-input-text: #111827;   /* gray-900 */
  --color-input-border: #d1d5db; /* gray-300 */
  --color-input-focus-border: #2563eb; /* blue-600 */
  --color-input-focus-shadow: rgba(59, 130, 246, 0.25); /* Lighter shadow for light mode */

  --color-code-bg: #f3f4f6;      /* gray-100 */
  --color-code-text: #1f2937;    /* gray-800 */
}

html.dark {
  /* Dark Mode Colors */
  --color-bg: #0a0a0a;
  --color-text-base: #f3f4f6;  /* gray-100 */
  --color-text-muted: #d1d5db; /* gray-300 */
  --color-text-subtle: #9ca3af;/* gray-400 */

  --color-border: #374151;     /* gray-700 */
  --color-border-hover: #4b5563;/* gray-600 */

  --color-link: #60a5fa;       /* blue-400 */
  --color-link-hover: #93c5fd; /* blue-300 */

  --color-button-bg: #374151;    /* gray-700 */
  --color-button-text: #f3f4f6;  /* gray-100 */
  --color-button-hover-bg: #4b5563;/* gray-600 */

  --color-input-bg: #1f2937;    /* gray-800 */
  --color-input-text: #f3f4f6;  /* gray-100 */
  --color-input-border: #4b5563; /* gray-600 - slightly lighter for better visibility */
  --color-input-focus-border: #60a5fa; /* blue-400 */
  --color-input-focus-shadow: rgba(96, 165, 250, 0.35); /* Adjusted shadow for dark mode */

  --color-code-bg: #1f2937;    /* gray-800 */
  --color-code-text: #d1d5db;  /* gray-300 */
}

/* -------------------------------------------------------------------------- */
/*                                Base Styles                                 */
/* -------------------------------------------------------------------------- */

/* Body styles are now consolidated above */

/* Headings */
h1, h2, h3, h4, h5, h6 {
  color: var(--color-text-base); /* Use base text color, can be overridden if needed */
  font-weight: 600;
  line-height: 1.3;
  margin-bottom: 0.75em;
}
h1 { font-size: 2.25rem; } /* ~36px */
h2 { font-size: 1.875rem; }/* ~30px */
h3 { font-size: 1.5rem; }  /* ~24px */
h4 { font-size: 1.25rem; } /* ~20px */
h5 { font-size: 1rem; }    /* ~16px */
h6 { font-size: 0.875rem; }/* ~14px */

/* Paragraphs */
p {
  color: var(--color-text-muted);
  margin-bottom: 1rem;
}

/* Links */
a {
  color: var(--color-link);
  text-decoration: none;
  transition: color 0.15s ease-in-out;
}
a:hover {
  color: var(--color-link-hover);
  text-decoration: underline;
}

/* Horizontal Rule */
hr {
  border: 0;
  height: 1px;
  background-color: var(--color-border);
  margin: 2rem 0;
}

/* Code blocks and inline code */
code, kbd, samp, pre {
  font-family: var(--font-mono);
  font-size: 0.9em; /* Slightly smaller for better integration */
  background-color: var(--color-code-bg);
  color: var(--color-code-text);
  border-radius: 0.25rem; /* 4px */
  padding: 0.2em 0.4em;
}
pre {
  padding: 1em;
  overflow-x: auto;
  border: 1px solid var(--color-border);
}
/* Remove padding for code elements inside pre */
pre code {
  padding: 0;
  background-color: transparent;
  color: inherit; /* Inherit color from pre */
  border-radius: 0;
  font-size: 1em; /* Reset font size to pre's font size */
}


/* -------------------------------------------------------------------------- */
/*                                Form Elements                               */
/* -------------------------------------------------------------------------- */

button,
input[type="button"],
input[type="submit"],
input[type="reset"] {
  display: inline-block;
  font-weight: 500;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  background-color: var(--color-button-bg);
  color: var(--color-button-text);
  border: 1px solid transparent; /* Often button borders are same as bg or transparent */
  padding: 0.5rem 1rem; /* 8px 16px */
  font-size: 1rem; /* 16px */
  line-height: 1.5;
  border-radius: 0.375rem; /* 6px */
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
button:hover,
input[type="button"]:hover,
input[type="submit"]:hover,
input[type="reset"]:hover {
  background-color: var(--color-button-hover-bg);
  /* text-decoration: none; Ensure no underline on button hover */
}
button:focus,
input[type="button"]:focus,
input[type="submit"]:focus,
input[type="reset"]:focus {
  outline: 0;
  box-shadow: 0 0 0 0.2rem var(--color-input-focus-shadow); /* Focus ring */
}

input[type="text"],
input[type="email"],
input[type="password"],
input[type="search"],
input[type="tel"],
input[type="url"],
input[type="number"],
textarea,
select {
  display: block;
  width: 100%; /* Make form controls block-level and full-width by default */
  padding: 0.5rem 0.75rem; /* 8px 12px */
  font-size: 1rem; /* 16px */
  font-weight: 400;
  line-height: 1.5;
  color: var(--color-input-text);
  background-color: var(--color-input-bg);
  background-clip: padding-box;
  border: 1px solid var(--color-input-border);
  appearance: none; /* Remove default OS styling */
  border-radius: 0.375rem; /* 6px */
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
input[type="text"]:focus,
input[type="email"]:focus,
input[type="password"]:focus,
input[type="search"]:focus,
input[type="tel"]:focus,
input[type="url"]:focus,
input[type="number"]:focus,
textarea:focus,
select:focus {
  color: var(--color-input-text);
  background-color: var(--color-input-bg);
  border-color: var(--color-input-focus-border);
  outline: 0;
  box-shadow: 0 0 0 0.2rem var(--color-input-focus-shadow);
}

textarea {
  resize: vertical; /* Allow vertical resize only */
}

select {
  /* Add custom arrow for select if desired, or leave as OS default */
}

/* Placeholder text styling */
::placeholder {
  color: var(--color-text-subtle);
  opacity: 1; /* Firefox */
}

/* -------------------------------------------------------------------------- */
/*                            App Layout Structure                            */
/* -------------------------------------------------------------------------- */

.app-container {
  display: flex;
  height: 100vh; /* Full viewport height */
  overflow: hidden; /* Prevent scrollbars on the container itself */
  background-color: var(--color-bg); /* Uses theme variable */
  color: var(--color-text-base);   /* Uses theme variable */
}

.app-sidebar {
  /* Assuming Sidebar component has this class on its root */
  width: 260px; /* Example width, adjust as needed */
  flex-shrink: 0; /* Prevent sidebar from shrinking */
  background-color: var(--color-input-bg); /* A slightly different bg for contrast */
  border-right: 1px solid var(--color-border);
  overflow-y: auto; /* Allow scrolling if content exceeds height */
  padding: 1rem;
  /* Transition for opening/closing if you implement that */
  /* transition: transform 0.3s ease-in-out; */
}

/* Styles for when sidebar is hidden (if you add toggle logic) */
/* .app-sidebar.hidden { transform: translateX(-100%); } */

.main-content-wrapper {
  flex-grow: 1; /* Takes up remaining space */
  display: flex;
  flex-direction: column;
  overflow: hidden; /* Important for nested scrolling */
  background-color: var(--color-bg); /* Main background */
}

.app-header {
  /* Assuming Header component has this class on its root */
  padding: 0.75rem 1rem; /* Adjust padding */
  border-bottom: 1px solid var(--color-border);
  flex-shrink: 0; /* Prevent header from shrinking */
  /* Add display:flex and items-center, justify-between if needed for header content */
}

.inner-content-area {
  display: flex;
  flex-grow: 1;
  overflow: hidden; /* Crucial for independent scrolling of children */
}

.chat-area-main {
  /* Assuming main element for chat has this class */
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  overflow: hidden; /* Parent of ChatArea and InputArea */
  /* background-color: var(--color-bg); /* or a slightly different shade if desired */
}

/* ChatArea and InputArea will need their own internal scrolling if their content overflows */
/* We'll style them based on their components later */

.app-model-config-sidebar {
  /* Assuming ModelConfigSidebar component has this class on its root */
  width: 320px; /* Example width, adjust as needed */
  flex-shrink: 0;
  background-color: var(--color-input-bg); /* Slightly different bg */
  border-left: 1px solid var(--color-border);
  overflow-y: auto;
  padding: 1rem;
  /* Transition for opening/closing if you implement that */
}

/* Ensure direct children of flex containers that need to scroll have overflow set */
/* For example, the actual message list within ChatArea */
/* .chat-messages-list { overflow-y: auto; flex-grow: 1; } */

/* --- Tailwind Class Replications (Phase 1) --- */

/* --- Core Layout Utilities --- */
.flex { display: flex !important; }
.flex-1 { flex: 1 1 0% !important; }
.flex-col { flex-direction: column !important; }
.flex-shrink-0 { flex-shrink: 0 !important; }
.items-center { align-items: center !important; }
.justify-between { justify-content: space-between !important; }

/* --- Sizing Utilities --- */
.h-screen { height: 100vh !important; }
.w-72 { width: 18rem !important; } /* 288px */
.w-80 { width: 20rem !important; } /* 320px */
.w-full { width: 100% !important; }
.h-full { height: 100% !important; }
.w-2 { width: 0.5rem !important; }
.h-2 { height: 0.5rem !important; }
.h-1\.5 { height: 0.375rem !important; } /* For sliders */
.h-3 { height: 0.75rem !important; } /* For slider thumbs */
.w-3 { width: 0.75rem !important; } /* For slider thumbs */


/* --- Overflow Utilities --- */
.overflow-hidden { overflow: hidden !important; }
.overflow-y-auto { overflow-y: auto !important; }

/* --- Positioning Utilities --- */
.fixed { position: fixed !important; }
.static { position: static !important; }
.absolute { position: absolute !important; }
.relative { position: relative !important; }
.inset-y-0 { top: 0 !important; bottom: 0 !important; }
.left-0 { left: 0 !important; }
.left-3 { left: 0.75rem !important; }
.right-1 { right: 0.25rem !important; }
.right-2 { right: 0.5rem !important; }
.top-1 { top: 0.25rem !important; }
.top-2 { top: 0.5rem !important; }
.top-3 { top: 0.75rem !important; }
.bottom-1 { bottom: 0.25rem !important; }
.z-40 { z-index: 40 !important; }

/* --- Transform Utilities (for Sidebar animation) --- */
.transform { /* This class itself might not do anything in Tailwind, it enables other transform utils */ }
.translate-x-0 { transform: translateX(0) !important; }
.\!-translate-x-full { transform: translateX(-100%) !important; } /* Escaped '!' for Tailwind's !- prefix */

/* --- Spacing Utilities --- */
.p-4 { padding: 1rem !important; }
.p-2 { padding: 0.5rem !important; }
.p-3 { padding: 0.75rem !important; }
.px-2 { padding-left: 0.5rem !important; padding-right: 0.5rem !important; }
.px-3 { padding-left: 0.75rem !important; padding-right: 0.75rem !important; }
.py-0\.5 { padding-top: 0.125rem !important; padding-bottom: 0.125rem !important; }
.py-1 { padding-top: 0.25rem !important; padding-bottom: 0.25rem !important; }
.py-2 { padding-top: 0.5rem !important; padding-bottom: 0.5rem !important; }
.py-1\.5 { padding-top: 0.375rem !important; padding-bottom: 0.375rem !important; }
.pl-10 { padding-left: 2.5rem !important; }
.pr-4 { padding-right: 1rem !important; }
.pl-3 { padding-left: 0.75rem !important; }
.pr-10 { padding-right: 2.5rem !important; }
.pr-8 { padding-right: 2rem !important; }
.mr-1 { margin-right: 0.25rem !important; }
.mr-2 { margin-right: 0.5rem !important; }
.ml-2 { margin-left: 0.5rem !important; }
.mb-1 { margin-bottom: 0.25rem !important; }
.mb-3 { margin-bottom: 0.75rem !important; }
.mb-4 { margin-bottom: 1rem !important; }
.mt-1 { margin-top: 0.25rem !important; }
.mt-2 { margin-top: 0.5rem !important; }

/* Simplified space utilities - direct adjacent sibling selector */
.space-x-2 > :not([hidden]) ~ :not([hidden]) { margin-left: 0.5rem !important; }
.space-x-3 > :not([hidden]) ~ :not([hidden]) { margin-left: 0.75rem !important; }
.space-x-4 > :not([hidden]) ~ :not([hidden]) { margin-left: 1rem !important; }
.space-y-1 > :not([hidden]) ~ :not([hidden]) { margin-top: 0.25rem !important; }
.space-y-2 > :not([hidden]) ~ :not([hidden]) { margin-top: 0.5rem !important; }
.space-y-5 > :not([hidden]) ~ :not([hidden]) { margin-top: 1.25rem !important; }
.space-y-6 > :not([hidden]) ~ :not([hidden]) { margin-top: 1.5rem !important; }


/* --- Border Utilities --- */
.border-r { border-right-width: 1px !important; border-style: solid !important; }
.border-l { border-left-width: 1px !important; border-style: solid !important; }
.border-b { border-bottom-width: 1px !important; border-style: solid !important; }
.border-t { border-top-width: 1px !important; border-style: solid !important; }
.border { border-width: 1px !important; border-style: solid !important; }
.border-4 { border-width: 4px !important; border-style: solid !important; }
.border-transparent { border-color: transparent !important; }

/* Light mode border colors */
.border-gray-200 { border-color: var(--color-border) !important; } /* Light: #e5e7eb */
.border-gray-300 { border-color: #d1d5db !important; } /* Light: gray-300 */
.border-primary-200 { border-color: #bfdbfe !important; } /* Light: blue-200 */


/* Dark mode border colors */
html.dark .dark\:border-gray-800 { border-color: var(--color-border) !important; } /* Dark: #374151 */
html.dark .dark\:border-gray-700 { border-color: var(--color-border) !important; } /* Dark: #374151 */
html.dark .dark\:border-primary-800\/30 { border-color: rgba(30, 58, 138, 0.3) !important; } /* Assuming primary-800 is #1e3a8a */
html.dark .dark\:border-blue-600 { border-color: #2563eb !important; } /* blue-600 */


/* --- Background & Text Color Utilities --- */
.bg-white { background-color: #ffffff !important; }
.bg-gray-100 { background-color: var(--color-code-bg) !important; } /* Light: #f3f4f6 */
.bg-gray-200 { background-color: #e5e7eb !important; } /* Light: gray-200 */
.bg-gray-200\/50 { background-color: rgba(229, 231, 235, 0.5) !important; }
.bg-primary-100 { background-color: #dbeafe !important; } /* Light: blue-100 */
.bg-primary-600 { background-color: #2563eb !important; } /* blue-600 */
.bg-primary-900\/30 { background-color: rgba(30, 58, 138, 0.3) !important; }
.bg-primary-900\/20 { background-color: rgba(30, 58, 138, 0.2) !important; }
.bg-green-500 { background-color: #22c55e !important; } /* green-500 */
.bg-dark-700 { background-color: #374151 !important; } /* gray-700, often used in dark UI */


.text-gray-800 { color: var(--color-primary-text) !important; } /* Light: #1f2937 */
.text-gray-100 { color: var(--color-text-base) !important; } /* Dark: #f3f4f6 */
.text-gray-200 { color: #e5e7eb !important; } /* Dark: gray-200 */
.text-gray-300 { color: var(--color-text-muted) !important; } /* Dark: #d1d5db */
.text-gray-400 { color: var(--color-text-subtle) !important; }
.text-gray-500 { color: var(--color-text-subtle) !important; }
.text-gray-600 { color: #4b5563 !important; } /* Light: gray-600 */
.text-white { color: #ffffff !important; }
.text-primary-400 { color: var(--color-link) !important; }
.text-primary-800 { color: #1e40af !important; } /* Light: blue-800 */
.text-transparent { color: transparent !important; }
.bg-clip-text { -webkit-background-clip: text !important; background-clip: text !important; }
.bg-gradient-to-r { background-image: linear-gradient(to right, var(--tw-gradient-from, transparent), var(--tw-gradient-to, transparent)) !important; }
.from-primary-400 { --tw-gradient-from: var(--color-link) !important; }
.to-primary-600 { --tw-gradient-to: #2563eb !important; }
.bg-gradient-to-br { background-image: linear-gradient(to bottom right, var(--tw-gradient-from, transparent), var(--tw-gradient-to, transparent)) !important; }
.from-primary-500 { --tw-gradient-from: #3b82f6 !important; }
.to-primary-700 { --tw-gradient-to: #1d4ed8 !important; }


/* Dark Mode Specific Variants */
html.dark .dark\:bg-dark-800 { background-color: var(--color-input-bg) !important; } /* #1f2937 */
html.dark .dark\:bg-dark-900 { background-color: var(--color-bg) !important; } /* #0a0a0a */
html.dark .dark\:bg-dark-900\/30 { background-color: rgba(10, 10, 10, 0.3) !important; }
html.dark .dark\:bg-primary-900\/30 { background-color: rgba(30, 58, 138, 0.3) !important; }
html.dark .dark\:bg-gray-800\/50 { background-color: rgba(31, 41, 55, 0.5) !important; }
html.dark .dark\:text-white { color: #ffffff !important; }
html.dark .dark\:text-gray-100 { color: var(--color-text-base) !important; } /* #f3f4f6 */
html.dark .dark\:text-gray-200 { color: #e5e7eb !important; }
html.dark .dark\:text-gray-300 { color: var(--color-text-muted) !important; } /* #d1d5db */
html.dark .dark\:text-gray-400 { color: var(--color-text-subtle) !important; } /* #9ca3af */
html.dark .dark\:text-gray-500 { color: #6b7280 !important; } /* gray-500 */
html.dark .dark\:hover\:text-primary-300:hover { color: #93c5fd !important; } /* blue-300 */
html.dark .dark\:hover\:text-primary-400:hover { color: var(--color-link) !important; } /* blue-400 */
html.dark .dark\:hover\:bg-gray-700:hover { background-color: #374151 !important; } /* gray-700 */
html.dark .dark\:hover\:bg-gray-800\/50:hover { background-color: rgba(31, 41, 55, 0.5) !important; }
html.dark .dark\:hover\:border-gray-700:hover { border-color: var(--color-border) !important; } /* #374151 */


/* --- Typography Utilities --- */
.text-xs { font-size: 0.75rem !important; line-height: 1rem !important; }
.text-sm { font-size: 0.875rem !important; line-height: 1.25rem !important; }
.text-lg { font-size: 1.125rem !important; line-height: 1.75rem !important; }
.text-xl { font-size: 1.25rem !important; line-height: 1.75rem !important; }
.font-semibold { font-weight: 600 !important; }
.font-bold { font-weight: 700 !important; }
.font-medium { font-weight: 500 !important; }
.font-mono { font-family: var(--font-mono) !important; }
.truncate { overflow: hidden !important; text-overflow: ellipsis !important; white-space: nowrap !important; }
.text-center { text-align: center !important; }

/* --- Rounded Corners --- */
.rounded-lg { border-radius: 0.5rem !important; } /* 8px */
.rounded-full { border-radius: 9999px !important; }
.rounded { border-radius: 0.25rem !important; } /* 4px */
.rounded-md { border-radius: 0.375rem !important; } /* 6px */


/* --- Effects (Shadows, Transitions - basic for now) --- */
.shadow-lg { box-shadow: 0 10px 15px -3px rgba(0,0,0,0.1), 0 4px 6px -2px rgba(0,0,0,0.05) !important; }
html.dark .dark\:shadow-blue-500\/20 { box-shadow: 0 10px 15px -3px rgba(59, 130, 246, 0.2), 0 4px 6px -2px rgba(59, 130, 246, 0.1) !important; }

.transition-colors { transition-property: color, background-color, border-color, text-decoration-color, fill, stroke !important; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important; transition-duration: 150ms !important; }
.transition-transform { transition-property: transform !important; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important; transition-duration: 150ms !important; }
.transition-all { transition-property: all !important; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important; transition-duration: 150ms !important; }
.duration-300 { transition-duration: 300ms !important; }
.ease-in-out { transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important; }

/* --- Other Utilities --- */
.appearance-none { appearance: none !important; -webkit-appearance: none !important; -moz-appearance: none !important; }
.cursor-pointer { cursor: pointer !important; }
.cursor-not-allowed { cursor: not-allowed !important; }
.focus\:outline-none:focus { outline: 2px solid transparent !important; outline-offset: 2px !important; }
.focus\:ring-2:focus { --tw-ring-offset-width: 0px !important; --tw-ring-offset-color: #fff !important; --tw-ring-color: #3b82f6 !important; --tw-ring-offset-shadow: var(--tw-ring-inset,0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)) !important; --tw-ring-shadow: var(--tw-ring-inset,0 0 0 calc(2px + var(--tw-ring-offset-width))) var(--tw-ring-color) !important; box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow,0 0 #0000) !important; }
.focus\:ring-primary-500:focus { --tw-ring-color: #3b82f6 !important; } /* blue-500 */
.focus\:border-transparent:focus { border-color: transparent !important; }
.placeholder-gray-500::placeholder { color: #6b7280 !important; opacity: 1 !important; }
.pointer-events-none { pointer-events: none !important; }
.animate-pulse { animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite !important; }
@keyframes pulse { 0%, 100% { opacity: 1; } 50% { opacity: .5; } }
.disabled\:text-gray-600:disabled { color: #4b5563 !important; }
.disabled\:cursor-not-allowed:disabled { cursor: not-allowed !important; }


/* --- Responsive Utilities --- */
.hidden { display: none !important; }

@media (min-width: 768px) { /* md breakpoint */
  .md\:static { position: static !important; }
  .md\:translate-x-0 { transform: translateX(0) !important; }
  .md\:hidden { display: none !important; }
  .md\:flex { display: flex !important; }
  .sm\:inline-block { display: inline-block !important; } /* Used in Header for model name */
}

@media (min-width: 1024px) { /* lg breakpoint (if needed) */
}

@media (min-width: 1280px) { /* xl breakpoint */
  .xl\:block { display: block !important; }
}

/* --- Specific Component Adjustments (using existing custom classes if they are still in JSX) --- */
/* These ensure our .app-container etc. styles from previous step are still effective */
/* and can be combined with the utility classes if those are still on the elements */

/* .app-container already defined with display:flex, height:100vh, etc. */
/* .app-sidebar already defined with width, flex-shrink, etc. */
/* .main-content-wrapper already defined */
/* .app-header already defined */
/* .inner-content-area already defined */
/* .chat-area-main already defined */
/* .app-model-config-sidebar already defined */

/* Ensure the .sidebar class from Sidebar.tsx gets its specific layout */
/* This combines with the utility classes like .fixed, .w-72 etc. */
.sidebar {
  /* Base mobile styles (fixed, off-screen) */
  /* position: fixed; /* .fixed */
  /* top: 0; bottom: 0; left: 0; /* .inset-y-0 .left-0 */
  /* z-index: 40; /* .z-40 */
  /* width: 18rem; /* .w-72 */
  background-color: var(--color-code-bg); /* bg-gray-100 equivalent for light */
  border-right-width: 1px;
  border-style: solid;
  border-color: var(--color-border);
  /* display: flex; /* .flex */
  /* flex-direction: column; /* .flex-col */
  /* transform: translateX(-100%); /* .-translate-x-full */
  /* transition-property: transform; /* .transition-transform */
  /* transition-duration: 300ms; /* .duration-300 */
  /* transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); /* .ease-in-out */
}
html.dark .sidebar {
  background-color: var(--color-input-bg); /* dark:bg-dark-800 equivalent */
  border-color: var(--color-border); /* Uses dark mode border var */
}
/* The .translate-x-0 class will be toggled by JS for isOpen state on the .sidebar element */

/* @media (min-width: 768px) { /* md breakpoint */
  /* .sidebar { */
    /* position: static; /* md:static */
    /* transform: translateX(0); /* md:translate-x-0 */
  /* } */
/* } */

/* Slider specific styles */
input[type="range"].appearance-none::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  height: 0.75rem; /* h-3 */
  width: 0.75rem; /* w-3 */
  border-radius: 9999px; /* rounded-full */
  background-color: #3b82f6; /* bg-primary-500 */
  /* Add other thumb styles if needed, e.g., box-shadow */
}

input[type="range"].appearance-none::-moz-range-thumb {
  height: 0.75rem;
  width: 0.75rem;
  border-radius: 9999px;
  background-color: #3b82f6;
  border: none; /* Often needed for Firefox */
}

/* Ensure the <header> element gets its specific layout */
/* (Assuming Header.tsx root is <header>) */
/* header.bg-white { ... } */ /* These specific overrides might conflict with utility classes. Let utilities handle it. */
/* html.dark header.dark\:bg-dark-800 { ... } */

/* Ensure ModelConfigSidebar's root div gets its specific layout */
/* div.w-80.bg-dark-800.border-l { ... } */ /* Let utilities handle this */
/* @media (min-width: 1280px) { ... } */
